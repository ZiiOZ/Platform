import { useEffect, useState } from 'react';
import { supabase } from '../../supabaseClient';

interface Comment {
  id: number;
  post_id: string;
  username: string;
  content: string;
  created_at: string;
}

export default function ZiiCommentFeed({ postId }: { postId: string }) {
  const [comments, setComments] = useState<Comment[]>([]);
  const [newComment, setNewComment] = useState('');
  const [username, setUsername] = useState('');

  useEffect(() => {
    fetchComments();
  }, [postId]);

  const fetchComments = async () => {
    const { data, error } = await supabase
      .from('comments')
      .select('*')
      .eq('post_id', postId)
      .order('created_at', { ascending: false });

    if (error) console.error('Error loading comments:', error);
    else setComments(data);
  };

  const handleSubmit = async () => {
    if (!newComment.trim()) return;

    const { error } = await supabase.from('comments').insert([
      {
        post_id: postId,
        username: username || 'Anonymous',
        content: newComment,
      },
    ]);

    if (!error) {
      setNewComment('');
      fetchComments();
    } else {
      console.error('Failed to submit comment:', error);
    }
  };

  return (
    <div className="mt-4 border-t pt-4">
      <h3 className="text-md font-semibold mb-2">ðŸ’¬ Comments</h3>

      <div className="space-y-2 mb-4">
        {comments.map((comment) => (
          <div
            key={comment.id}
            className="border border-gray-200 rounded p-2 bg-gray-50"
          >
            <div className="text-sm font-bold text-gray-700">{comment.username}</div>
            <div className="text-sm text-gray-800">{comment.content}</div>
          </div>
        ))}
        {comments.length === 0 && (
          <div className="text-gray-500 text-sm">No comments yet.</div>
        )}
      </div>

      <input
        type="text"
        className="w-full border px-2 py-1 rounded mb-2"
        placeholder="Your name (optional)"
        value={username}
        onChange={(e) => setUsername(e.target.value)}
      />

      <textarea
        className="w-full border px-2 py-1 rounded mb-2"
        placeholder="Write a comment..."
        value={newComment}
        onChange={(e) => setNewComment(e.target.value)}
      />

      <button
        className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
        onClick={handleSubmit}
      >
        Submit Comment
      </button>
    </div>
  );
}
